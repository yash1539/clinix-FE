{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nlet baseurl = \"https://app-oqundvwgva-uc.a.run.app\";\nconst useLogin = () => {\n  _s();\n  const [loginInfo, setLoginInfo] = useState();\n  const [PatientInfo, setPatientInfo] = useState();\n  const callLogin = data => {\n    axios.post(`${baseurl}/login`, data).then(res => {\n      if (res !== null && res !== void 0 && res.data) {\n        const token = res.data.token;\n        setLoginInfo(res.data);\n        localStorage.setItem(\"token\", token);\n      }\n    }).catch(error => console.log(\"Error: \", error));\n  };\n  const registerPatient = data => {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    };\n    axios.post(`${baseurl}/newPatients`, data, {\n      headers: headers\n    }).then(res => {\n      if (res !== null && res !== void 0 && res.data) {\n        setPatientInfo(res.data);\n      }\n    }).catch(error => console.log(\"Error: \", error));\n  };\n  return {\n    callLogin,\n    loginInfo,\n    registerPatient,\n    PatientInfo\n  };\n};\n_s(useLogin, \"ob5/qaPKGCqkVp5QsVVskRIuCNU=\");\nexport default useLogin;","map":{"version":3,"names":["useState","axios","baseurl","useLogin","_s","loginInfo","setLoginInfo","PatientInfo","setPatientInfo","callLogin","data","post","then","res","token","localStorage","setItem","catch","error","console","log","registerPatient","getItem","headers","Authorization"],"sources":["/home/raramuri/projects3/clinix-FE/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nlet baseurl = \"https://app-oqundvwgva-uc.a.run.app\";\n\nconst useLogin = () => {\n  const [loginInfo, setLoginInfo] = useState();\n  const [PatientInfo, setPatientInfo] = useState();\n\n  const callLogin = (data) => {\n    axios\n      .post(`${baseurl}/login`, data)\n      .then((res) => {\n        if (res?.data) {\n          const token = res.data.token;\n\n          setLoginInfo(res.data);\n          localStorage.setItem(\"token\", token);\n        }\n      })\n      .catch((error) => console.log(\"Error: \", error));\n  };\n\n  const registerPatient = (data) => {\n    const token = localStorage.getItem(\"token\");\n\n    const headers = {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n    };\n    axios\n      .post(`${baseurl}/newPatients`, data, { headers: headers })\n      .then((res) => {\n        if (res?.data) {\n          setPatientInfo(res.data);\n        }\n      })\n      .catch((error) => console.log(\"Error: \", error));\n  };\n\n  return { callLogin, loginInfo, registerPatient, PatientInfo };\n};\n\nexport default useLogin;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,qCAAqC;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEhD,MAAMS,SAAS,GAAIC,IAAI,IAAK;IAC1BT,KAAK,CACFU,IAAI,CAAE,GAAET,OAAQ,QAAO,EAAEQ,IAAI,CAAC,CAC9BE,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEH,IAAI,EAAE;QACb,MAAMI,KAAK,GAAGD,GAAG,CAACH,IAAI,CAACI,KAAK;QAE5BR,YAAY,CAACO,GAAG,CAACH,IAAI,CAAC;QACtBK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;MACtC;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC,CAAC;EACpD,CAAC;EAED,MAAMG,eAAe,GAAIX,IAAI,IAAK;IAChC,MAAMI,KAAK,GAAGC,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,OAAO,GAAG;MACdC,aAAa,EAAG,UAASV,KAAM,EAAC;MAChC,cAAc,EAAE;IAClB,CAAC;IACDb,KAAK,CACFU,IAAI,CAAE,GAAET,OAAQ,cAAa,EAAEQ,IAAI,EAAE;MAAEa,OAAO,EAAEA;IAAQ,CAAC,CAAC,CAC1DX,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEH,IAAI,EAAE;QACbF,cAAc,CAACK,GAAG,CAACH,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC,CAAC;EACpD,CAAC;EAED,OAAO;IAAET,SAAS;IAAEJ,SAAS;IAAEgB,eAAe;IAAEd;EAAY,CAAC;AAC/D,CAAC;AAACH,EAAA,CApCID,QAAQ;AAsCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}